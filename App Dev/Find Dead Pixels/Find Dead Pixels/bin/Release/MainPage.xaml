<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Find_Dead_Pixels.MainPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Find_Dead_Pixels"
    xmlns:common="using:Find_Dead_Pixels.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Find Dead Pixels</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:ConnectionId='7' x:Name="backButton"                IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
        <Grid Grid.Row="1">
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition/>
        		<ColumnDefinition/>
        		<ColumnDefinition/>
        		<ColumnDefinition/>
        		<ColumnDefinition/>
        	</Grid.ColumnDefinitions>
        	<TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Click one of the button to fill the screen with that color.  Tap the screen again to returns to this page. If black pixels appear on the color screen, your monitor has dead pixels. If there are color pixels beside the one you pick. Your graphic card is the problem." VerticalAlignment="Top" Margin="80,40,0,0" FontSize="29.333" Grid.ColumnSpan="5"/>
        	<Button x:ConnectionId='2' x:Name="redB" Content="Red" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="40,0"                   />
        	<Button x:ConnectionId='3' x:Name="yellowB" Content="Yellow" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="40,0" Grid.Column="1"                      />
        	<Button x:ConnectionId='4' x:Name="greenB" Content="Green" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="40,0" Grid.Column="2"                     />
        	<Button x:ConnectionId='5' x:Name="blueB" Content="Blue" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="40,0" Grid.Column="3"                    />
        	<Button x:ConnectionId='6' x:Name="purpleB" Content="Purple" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="40,0" Grid.Column="4"                      />
        </Grid>
        <Canvas x:ConnectionId='1' x:Name="colorCanvas" Grid.RowSpan="2" Visibility="Collapsed"                       />

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>

